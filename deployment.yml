# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mysql
#   namespace: devopsexamapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mysql
#   template:
#     metadata:
#       labels:
#         app: mysql
#     spec:
#       containers:
#         - name: mysql
#           image: mysql:5.7
#           ports:
#             - containerPort: 3306
#           env:
#             - name: MYSQL_ROOT_PASSWORD
#               value: "rootpass"
#             - name: MYSQL_DATABASE
#               value: "devops_exam"
#           volumeMounts:
#             - name: mysql-data
#               mountPath: /var/lib/mysql
#       volumes:
#         - name: mysql-data
#           emptyDir: {}   # Temporary storage, change to PVC for persistence if needed

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: flask-app
#   namespace: devopsexamapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: flask
#   template:
#     metadata:
#       labels:
#         app: flask
#     spec:
#       containers:
#         - name: flask
#           image: prasad5806/devopsexamapp:latest
#           ports:
#             - containerPort: 5000
#           env:
#             - name: FLASK_APP
#               value: "app.py"
#             - name: FLASK_ENV
#               value: "production"
#             - name: MYSQL_HOST
#               value: "mysql"
#             - name: MYSQL_USER
#               value: "root"
#             - name: MYSQL_PASSWORD
#               value: "rootpass"
#             - name: MYSQL_DATABASE
#               value: "devops_exam"


# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: devopsexamapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# MySQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: devopsexamapp
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpass"
            - name: MYSQL_DATABASE
              value: "devops_exam"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-storage
      spec:
        storageClassName: gp3
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
# Flask Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: devopsexamapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: prasad5806/devopsexamapp:latest
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_APP
              value: "app.py"
            - name: FLASK_ENV
              value: "production"
            - name: MYSQL_HOST
              value: "mysql"
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_PASSWORD
              value: "rootpass"
            - name: MYSQL_DATABASE
              value: "devops_exam"

